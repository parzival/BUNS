# Config file for BUNS

# This file contains the configurations settings for BUNS (BackUp
# Negotiation Scripts). The file consists of global variable settings,
# followed by one or more backup path rulesets.
#
# In this file # is used for comments, either for a full or partial line
# A ; can also be used to comment out a line, but must be the first character
# on that line.

# Once this configuration is completed, the BUNS setup script (setup.sh)
# should be run. The setup script does not need to be run for some changes,
# such as ruleset changes, but must be run when any of the following are
# modified:
#       * Paths for the rulesets (added or modified)
#       * Directory for the scripts
#       * Directories or filenames for monitor, backup, or repository
#       * Snapshot method  
#       * Location of the config file itself
#       * Backup user group, or backup user scripts
#
# Note that running the setup script will also clear the log file, regardless
# of any changes that were actually made.
#

# *** Globals *** 
#
# Globals are set using the form VAR = value, each on their own line.
# No global settings may be placed after the rulesets.

# Directory of all the base buns script files. Using the -i option for setup 
# will install the scripts to this location.
SCRIPT_DIR = /root/script/buns

# User group that is allowed to access the backups. 
BACKUP_GROUP = a_group_name

# Default backup user for backups. This user will be the owner of
# the backed up files, and the 'user scripts' are stored in their
# user directory (setup script can override the user)
BACKUP_USER = a_user_name

# Location of user scripts, relative to backup user home directory 
# (setup script can override with absolute location)
USER_SCRIPT_DIR = script/buns

# For each path in the rulesets, several directories will be created.
# The names of these directories can be configured by the next few settings.
#
# These are relative to the path in the rule, and are the only directories
# that BUNS requires or will operate on.
#
# The BUNS system relies on incrontab entries for the monitor directory
# for each ruleset path. Using the setup script after setting up the config 
# file will set up incrontab appropriately.
#
# Location of monitor files during backups.
MONITOR_DIR = status 
# Place where the initial backup is made. 
BACKUP_DIR = backup 
# Location of snapshots/copies.
BACKUP_REPOSITORY = archive 

# The following are file names to be used for status files in the Monitor
# directory. These are required in some user scripts (which do not
# load the config file), and require setup to be re-run if they are 
# changed.
#
# Name of the file used for locking (using flock) in the Monitor directory.
LOCK_FILENAME = buns
#
# Name of the file used to store the PID of the backup in the Monitor
# directory. This file is deleted either when the backup is done or a
# timeout occurs.
PID_FILENAME = in_progress
#
# Name of the file used to flag that the backup is finished, stored in the
# Monitor directory. This file will be deleted once any additional operations
# triggered by the backup are finished (e.g. snapshot & culling). Another
# backup should not begin if this file is present, to ensure cohesive snapshots.
BACKUP_DONE_FILENAME = backup_ready

# Replacement character used for colon in snapshot names. Backup snapshots 
# use ISO-8601 date format for their filename, which has : as a separator 
# of hour and minute for times. To avoid issues with this character,
# the replacement character is used in the actual filename.
COLON_REPLACEMENT = h

# This is the amount of time in seconds that a backup's timestamp may be
# in the future before a warning (or error, if ABORT_ON_FUTURE is set) is
# generated. Differences in timestamps are normally due to variations in
# machine clock setting, and should not be very large.
FUTURE_LEEWAY = 3600

# If this is set, then backup timestamps that are later than the current
# time + FUTURE_LEEWAY will cause the process to abort instead of merely
# issuing a warning. In both cases, the 'future' backup snapshots will not
# be culled.
ABORT_ON_FUTURE = false

# The method used for making snapshots (archived copies) of the backup.
# 'Snapshot' is the general term used, but does not necessarily mean a
# snapshot according to the filesystem used.
# Allowed values are:
#    copy        All files are directly copied.
#    btrfs       Use BTRFS snapshots. 
#
# The BACKUP_DIR for each path in the rulesets must be appropriate for
# the snapshot method (e.g. a BTRFS subvolume if 'btrfs' is used). 
# The setup script will create them automatically.
SNAPSHOT_METHOD = btrfs

# Location of the log file
LOG_FILE = /var/log/buns

# *** Rulesets ***
#
# A ruleset consists of one or more paths, which are enclosed in [] brackets.
# Each path must be on its own line beginning  with the [ symbol.
# The path should be a directory (trailing / should NOT be included).
# The paths are then followed by rules, which are separated by whitespace.
#
# A ruleset is terminated by either the end of the file or the start of a new
# ruleset path by using the [ symbol at the beginning of the line. When 
# multiple paths are listed together with no rules in between, the rules that
# follow apply to each of the paths in that set.
#
# Rules have a type, indicated by the first letter, and then a number that
# indicates how many backups are kept, followed by a / character and then 
# a value. For the 'keep' or 'repeating' rule type, the value after the /
# is a time period. For 'direct' rules, the value is a regular expression
# that is matched against the backup name.
# 
# Rules always define which backups to preserve, and are cumulative. 
# Backups are culled when they do not meet any of the criteria for 
# preservation.
#
#
# Example ruleset
# [ /mnt/backup_disk ]
#  K4/3d       Retain up to 4 backups from the last 3 days
#  K0/12h30m   Retain all backups in the last 12 hours, 30 minutes
#  R6/30h      Retain one per 30-hour period for six periods
#  R6/1M       Retain 1 backup for each of the last six months
#  D4/-0[123]T Retain up to 4 backups whose date is 1,2, or 3 
# See the file cull.sh for more notes on the rules.

# Add rulesets below
